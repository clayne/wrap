.\"
.\"     wrap -- text reformatter
.\"     wrap.1: manual page
.\"
.\"     Copyright (C) 1996-2017  Paul J. Lucas
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 2 of the Licence, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" ---------------------------------------------------------------------------
.\" define code-start macro
.de cS
.sp
.nf
.RS 5
.ft CW
..
.\" define code-end macro
.de cE
.ft 1
.RE
.fi
.if !'\\$1'0' .sp
..
.\" ---------------------------------------------------------------------------
.TH \f3wrap\fP 1 "January 19, 2017" "PJL TOOLS"
.SH NAME
wrap \- text reformatter
.SH SYNOPSIS
.B wrap
.BI [ options ]
.SH DESCRIPTION
.B wrap
is a filter for reformatting text by wrapping and filling lines
to a given
.IR line-width ,
the default for which is 80 characters.
Lines are wrapped at either
.I whitespace
or
.I hyphen
characters
(unless the
.B \-y
option is specified).
.SS Whitespace Characters
A whitespace character is any character
that has the ``white-space`` Unicode property.
.SS Whitespace Folding
Consecutive whitespace characters
are folded into a single space
with the following exceptions:
.nr step 1 1
.IP \n[step]. 3
Force two spaces
(by default, unless the
.B \-E
option is specified)
after the end of a sentence that ends a line;
sentences are ended by an ``end-of-sentence'' character
(see
.B End-of-Sentence Characters
below).
.IP \n+[step].
Allow two spaces
(by default, unless the
.B \-E
option is specified)
after the end of a sentence that does not end a line.
(This distinction is made so as not to put two spaces after
a period that is an abbreviation and not the end of a sentence.
Periods at the end of a line will hopefully not be abbreviations.)
.IP \n+[step].
If neither the
.B \-n
nor the
.B \-N
option is specified,
two consecutive newline characters delimit a paragraph and are not folded;
more than two are folded.
If
.B \-n
is specified,
newlines receive no special treatment.
If
.B \-N
is specified, every newline delimits a paragraph.
.IP \n+[step].
If the
.B \-d
option is specified,
a line beginning with a `\f(CW.\fP' (dot),
presumed to be an
.RB [ nt ] roff (1)
control line,
is not altered.
.IP \n+[step].
If the
.B \-u
option is specified,
exceptions are made in order to pretty-print Markdown text
(see
.B MARKDOWN FORMATTING
below).
.SS Character Encoding
Text is assumed to be encoded in UTF-8.
All multiple-byte, UTF-8-encoded characters
are considered to have a width of 1.
.SS Discarded Characters
Non-whitespace control characters are discarded.
A control character is any character for which
.BR iscntrl (3)
returns non-zero.
Additionally,
UTF-8 Byte-Order Marks (BOMs)
and UTF-8 byte sequences that result in invalid Unicode code-points
are discarded.
.SS End-of-Sentence Characters
An ``end-of-sentence'' character is
a period,
question mark,
or
exclamation mark,
optionally followed by
an apostrophe,
quotation mark,
right single or double quotation mark,
right parenthesis or bracket,
or any comparable Unicode character.
.SS Hyphen Characters
In addition to wrapping at whitespace characters,
.B wrap
also wraps at
.I hyphen
characters
(unless
.B \-y
is specified),
but only when they appear between letters
that are not part of either a URL
(file, ftp, http, or https)
or an e-mail address
(optionally prefixed by \f(CWmailto:\fP).
A hyphen character is any character that has either the
``hyphen''
or
``dash''
Unicode property
(with the obvious exception of U+2011 Non-Breaking Hyphen).
.SH OPTIONS
An option argument
.I f
means
.IR file ,
.I n
means
.IR "unsigned integer" ,
and
.I s
means
.IR string .
.TP
.BI \-a " s"
Specifies the alias name
.I s
from the configuration file to be used.
This overrides any alias
from a matched pattern
via either the
.B \-f
or
.B \-F
options.
.TP
.BI \-b " s"
Specifies the set of ``block'' characters
.I s
that,
when the first non-whitespace character on a line,
delimits a paragraph.
.TP
.BI \-c " f"
Specifies the configuration file
.I f
to read
(default is
.BR ~/.wraprc )
if warranted.
.TP
.B \-C
Suppresses reading of any configuration file,
even one explicitly specified via
.BR \-c .
.TP
.B \-d
Does not alter lines that begin with a
.RB ` . '
(dot) presumed to be
.RB [ nt ] roff (1)
control lines.
.TP
.B \-e
Treats whitespace after an end-of-sentence character as a paragraph delimiter.
.TP
.BI \-E " n"
Specifies the number of spaces to emit or allow after an end-of-sentence
(default is 2).
.TP
.BI \-f " f"
Reads from file
.I f
(default is standard input).
.TP
.BI \-F " f"
Sets the file-name to
.I f
as if it were being read from
but still reads from standard input.
(This allows the file-name to be matched against a pattern
in a configuration file to use an alias
while still allowing
.B wrap
to be used as part of a shell pipeline.)
.TP
.BI \-h " n"
Hang-indents
.I n
more tabs for all but the first line of each paragraph.
.TP
.BI \-H " n"
Hang-indents
.I n
more spaces for all but the first line of each paragraph
after any tabs.
.TP
.BI \-i " n"
Indents
.I n
more tabs for the first line of each paragraph.
.TP
.BI \-I " n"
Indents
.I n
more spaces for the first line of each paragraph after any tabs.
.TP
.BI \-l " s"
Specifies the line-endings to use
.IR s ,
one of
\f(CW-\fP,
\f(CWi\fP,
or
\f(CWinput\fP
(whatever the input uses, the default);
\f(CWcrlf\fP,
\f(CWd\fP,
\f(CWdos\fP,
\f(CWw\fP,
or
\f(CWwindows\fP
(DOS/Windows: CR+LF);
or
\f(CWlf\fP,
\f(CWu\fP,
or
\f(CWunix\fP
(Unix: LF);
all case-insensitive.
.TP
.BI \-L " s"
Specifies a string
.I s
that is to be prepended to every line.
The width of
.I s
is subtracted from
.IR line-width .
.TP
.BI \-m " n"
Mirrors tabs; equivalent to:
.BI \-t n
.BI \-w m
where
.IR "m = line-width \- tab-spaces * n" .
.TP
.BI \-M " n"
Mirrors spaces; equivalent to:
.BI \-S n
.BI \-w m
where
.IR "m = line-width \- 2n" .
.TP
.B \-n
Does not treat newlines as paragraph delimiters.
.TP
.B \-N
Treats every newline as a paragraph delimiter.
This option is useful for line-breaking code prior to printing.
.TP
.BI \-o " f"
Writes to file
.I f
(default is standard output).
.TP
.BI \-p " s"
Treats the given characters in
.I s
as paragraph delimiters.
.TP
.B \-P
Treats the leading whitespace on the first line
as a prototype for all subsequent lines.
.TP
.BI \-s " n"
Sets
.I tab-spaces
(the number of spaces a tab character should be considered the same as)
to
.I n
characters
(default is 8).
.TP
.BI \-S " n"
Prepends
.I n
leading spaces to each line after any leading tabs.
.TP
.BI \-t " n"
Prepends
.I n
leading tabs to each line.
.TP
.B \-T
Treats the first line of every paragraph as a title
and puts it on a line by itself.
.TP
.B \-u
Formats Markdown text
(see
.B MARKDOWN FORMATTING
below).
.TP
.B \-v
Prints the version number to
.I stderr
and exit.
.TP
.BI \-w " n"
Sets
.I line-width
to
.I n
characters
(default is 80).
.TP
.B \-W
Treats a line beginning with whitespace as a paragraph delimiter.
.TP
.B \-y
Suppresses wrapping at hyphen characters.
.SH MARKDOWN FORMATTING
Via the
.B \-u
option,
.B wrap
can reformat Markdown text.
Unlike most Markdown formatters,
.B wrap
reformats Markdown to Markdown
(to make the source text itself look nice)
and not to some other format,
e.g., HTML.
As such,
only block elements of Markdown need be supported
since span elements play no role in reformatting
and need to be treaded no differently from the surrounding text.
.P
The Markdown elements that are currently supported
are only those that are explicitly listed in this section.
.SS Paragraphs
Paragraphs,
one or more consecutive lines of text
separated by one or more blank lines,
are reformatted as normal.
.SS Headers
Setext-style headers are supported:
.cS
This is an H1
=============

This is an H2
-------------
.cE
Any number of \f(CW=\fP's or \f(CW-\fP's will work
and need not match the number of characters
on the preceding line.
Atx-style headers are also supported:
.cS
# This is an H1

## This is an H2

###### This is an H6
.cE
that is 1\-6 \f(CW#\fP characters.
Optionally,
atx-style headers may be ``closed''
with trailing \f(CW#\fP characters,
but the number of closing \f(CW#\fP characters
need not match the number of opening characters.
Headers of either style may be indented by up to 3 spaces.
.SS Unordered/Bulleted Lists
Unordered lists use asterisks, plusses, and minuses
as list item markers:
.cS
* Red
* Green
* Blue
.cE
Markers may be indented by up to 3 spaces and
.I must
be followed by a space.
Multiline items may either be hang-indented:
.cS
+ Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium,
  rhoncus tempor fermentum, enim integer ad vestibulum volutpat.
+ Nisl rhoncus turpis est, vel elit, congue wisi enim nunc
  ultricies sit, magna tincidunt.
.cE
or not:
.cS
+ Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium,
rhoncus tempor fermentum, enim integer ad vestibulum volutpat.
+ Nisl rhoncus turpis est, vel elit, congue wisi enim nunc
ultricies sit, magna tincidunt.
.cE
Items may be separated by blank lines:
.cS
+ Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium,
  rhoncus tempor fermentum, enim integer ad vestibulum volutpat.

+ Nisl rhoncus turpis est, vel elit, congue wisi enim nunc
  ultricies sit, magna tincidunt.
.cE
Items may be multiple paragraphs
where the first line of subsequent paragraphs
.I must
be indented,
but others need not be:
.cS
+ Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium,
  rhoncus tempor fermentum, enim integer ad vestibulum volutpat.

  Nisl rhoncus turpis est, vel elit, congue wisi enim nunc
  ultricies sit, magna tincidunt.

+ Maecenas aliquam maecenas ligula nostra, accumsan taciti.
Sociis mauris in integer, a dolor netus non dui aliquet,
sagittis felis sodales, dolor sociis mauris, vel eu libero
cras.

  Faucibus at. Arcu habitasse elementum est, ipsum purus pede
porttitor class, ut adipiscing, aliquet sed auctor, imperdiet
arcu per diam dapibus libero duis.
.cE
(The original Markdown specification
.I requires
subsequent paragraphs to be indented by
.I 4
spaces;
.B wrap
allows paragraphs to be indented less
to match the hang-indent.)
.P
When reformatted,
multiline items are
.I always
hang-indented.
.SS Ordered/Numbered Lists
Ordered lists use numbers and
.I must
be followed by either a period or a right parenthesis \f(CW)\fP delimiter
and a space:
.cS
1. Chocolate
2. Vanilla
3. Strawberry
.cE
When reformatted,
out-of-sequence numbers will automatically be renumbered
starting at the first number.
A list item having a delimiter that is different from a previous list item
starts a new list:
.cS
1. This is one list.
1) This is another list.
.cE
Aside from using numbers as list item markers,
everything else about unordered lists
also applies to ordered lists.
.SS Definition Lists
Definition lists are term lines
preceded by a blank line
followed by definition lines that start with a colon:
.cS
Apple
: A deciduous tree (Malus domestica) in the rose family best known
  for its sweet, pomaceous fruit.

Pear
: Any of several tree and shrub species of genus Pyrus in the
  family Rosaceae.  It is also the name of the pomaceous fruit of
  these trees.
.cE
Term lines may be followed by a blank line.
Terms may have multiple definitions
that may be separated by a blank line:
.cS
Apple
: A deciduous tree (Malus domestica) in the rose family best known
  for its sweet, pomaceous fruit.
: An American multinational technology company headquartered in
  Cupertino, California, that designs, develops, and sells
  consumer electronics, computer software, and online services.
.cE
Aside from using a colon as the list item marker,
everything else about unordered lists
also applies to definition lists.
.SS Nested Lists
Nested lists
.I must
be indented 4 spaces per nesting level
and may be any mixture of
unordered,
ordered,
and definition
lists:
.cS
1. First outermost list item.
    * First nested list item.
    * Second nested list item.
2. Second outermost list item.
.cE
Nested lists support blank lines
and multiple-line and multiple-paragraph list items.
.SS Code Blocks
Code blocks
are one or more lines
indented by at least 4 spaces or 1 tab:
.cS
In C, the program to print ``hello, world'' is

    #include <stdio.h>

    int main() {
      printf( "hello, world\\n" );
    }

Just how to run this program depends on the system you are using.
.cE
Code blocks are passed through unaltered.
Code blocks nested inside lists
.I must
be indented
.I twice
\(em 8 spaces or 2 tabs.
.SS Fenced Code Blocks
Alternatively,
code blocks may be ``fenced,''
that is a sequence of lines
starting with 3 or more
tildes \f(CW~\fP or backticks \f(CW`\fP
and ending with at least as many of the same character:
.cS
~~~
#include <stdio.h>

int main() {
  printf( "hello, world\\n" );
}
~~~
.cE
Fenced code blocks are passed through unaltered.
.SS Horizontal Rules
Horitontal rules
(lines separating sections of a document)
are 3 or more
hyphens,
asterisks,
or
underscores
on a line by themselves.
Any amount of whitespace may also be used.
Examples include:
.cS
---
***
___
* * *
----------
.cE
Since a \f(CW---\fP
would be ambiguous with a Setext 2nd-level header,
the latter
.I must
have a non-blank line preceding it.
.SS Block-Level HTML
Block-level HTML are lines of one of the following:
.nr step 1 1
.IP \n[step]. 3
Starts with
\f(CW<pre\fP,
\f(CW<script\fP,
or
\f(CW<style\fP,
and is optionally followed by \f(CW>\fP or whitespace;
ends with a line containing
\f(CW</pre>\fP,
\f(CW</script>\fP,
or
\f(CW</style>\fP.
.IP \n+[step].
Starts with \f(CW<!--\fP (comment);
ends with a line containing \f(CW-->\fP.
.IP \n+[step].
Starts with \f(CW<?\fP (processing instruction);
ends with a line containing \f(CW?>\fP.
.IP \n+[step].
Starts with \f(CW<!\fP followed by an uppercase letter (DOCTYPE);
ends with a line containing \f(CW>\fP.
.IP \n+[step].
Starts with \f(CW<![CDATA[\fP (CDATA section);
ends with a line containing \f(CW]]>\fP.
.IP \n+[step].
Starts with \f(CW<\fP or \f(CW</\fP
followed by one of
\f(CWarticle\fP, \f(CWaside\fP,
\f(CWbase\fP, \f(CWbasefont\fP, \f(CWblockquote\fP, \f(CWbody\fP, \f(CWbr\fP,
\f(CWbutton\fP,
\f(CWcanvas\fP, \f(CWcaption\fP, \f(CWcenter\fP, \f(CWcol\fP, \f(CWcolgroup\fP,
\f(CWdd\fP, \f(CWdetails\fP, \f(CWdialog\fP, \f(CWdir\fP, \f(CWdiv\fP,
\f(CWdl\fP, \f(CWdt\fP,
\f(CWembed\fP,
\f(CWfieldset\fP, \f(CWfigcaption\fP, \f(CWfigure\fP, \f(CWfooter\fP,
\f(CWform\fP, \f(CWframe\fP, \f(CWframeset\fP,
\f(CWh1\fP, \f(CWh2\fP, \f(CWh3\fP, \f(CWh4\fP, \f(CWh5\fP, \f(CWh6\fP,
\f(CWhead\fP, \f(CWheader\fP, \f(CWhgroup\fP, \f(CWhr\fP, \f(CWhtml\fP,
\f(CWiframe\fP,
\f(CWlegend\fP, \f(CWli\fP, \f(CWlink\fP,
\f(CWmain\fP, \f(CWmap\fP, \f(CWmenu\fP, \f(CWmenuitem\fP, \f(CWmeta\fP,
\f(CWnav\fP, \f(CWnoframes\fP,
\f(CWobject\fP, \f(CWol\fP, \f(CWoptgroup\fP, \f(CWoption\fP,
\f(CWp\fP, \f(CWparam\fP, \f(CWprogress\fP,
\f(CWsection\fP, \f(CWsource\fP, \f(CWsummary\fP,
\f(CWtable\fP, \f(CWtbody\fP, \f(CWtd\fP, \f(CWtextarea\fP, \f(CWtfoot\fP,
\f(CWth\fP, \f(CWthead\fP, \f(CWtitle\fP, \f(CWtr\fP, \f(CWtrack\fP,
\f(CWul\fP,
or
\f(CWvideo\fP,
and is optionally followed by \f(CW>\fP, \f(CW/>\fP, or whitespace;
ends with a blank line.
.IP \n+[step].
Starts with a complete HTML (or XML) open or close tag
(having any tag name other than \f(CWpre\fP, \f(CWscript\fP, or \f(CWstyle\fP)
optionally followed
.I only
by whitespace;
ends with a blank line.
.P
If the line meets both the start and end conditions,
the block be only that line.
HTML blocks are passed through unaltered.
.SS Links
Neither inline nor reference links need any special treatment;
however,
reference link label lines such as:
.cS
[1]: https://github.com/paul-j-lucas/wrap
.cE
are passed through unaltered.
Link labels may be indented by up to 3 spaces.
The URL may optionally be followed by title
enclosed in one of
double quotes,
single quotes,
or parentheses:
.cS
[1]: https://github.com/paul-j-lucas/wrap "Wrap"
.cE
The title attribute may instead be put on the following line,
optionally indented by any number of spaces or tabs:
.cS
[md]: https://daringfireball.net/projects/markdown/
    "Markdown"
.cE 0
.SS Tables
Tables are lines that contain at least one pipe (\f(CW|\fP)
and one non-whitespace character.
Tables
.I must
be separated from surrounding text by blank lines:
.cS
Column 1 Header | Column 2 Header
----------------|----------------
Data C1R1       | Data C2R1
Data C1R2       | Data C2R2
.cE
While it looks best if the columns are all the same width,
they need not be.
Tables may optionally also have pipes at either end of the table:
.cS
|Column 1 Header | Column 2 Header|
|----------------|----------------|
|Data C1R1       | Data C2R1      |
|Data C1R2       | Data C2R2      |
.cE
Tables may be nested inside lists.
Tables are passed through unaltered.
.SS Footnotes
Footnote markers need no special treatment;
however footnote definitions such as:
.cS
[^1]: This is a footnote.
.cE
are formatted as other text.
Footnotes may contain other block-level elements
when indented by 4 spaces.
As a special case when there are multiple sentences or paragraphs,
the first line may be left empty to make the text align better:
.cS
[^lorem]:
    Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium,
    rhoncus tempor fermentum, enim integer ad vestibulum volutpat.

    Nisl rhoncus turpis est, vel elit, congue wisi enim nunc
    ultricies sit, magna tincidunt.
.cE 0
.SS Abbreviations
Abbreviation definition lines are of the form:
.cS
*[HTML]: Hyper Text Markup Language
.cE
Abbreviation definition lines are passed through unaltered.
.SH EXIT STATUS
.PD 0
.IP 0
Success.
.IP 64
Command-line usage error.
.IP 66
Open file error.
.IP 69
A system resource is not available, e.g., a UTF-8 locale.
.IP 70
Internal software error.
(Please report the bug.)
.IP 71
System error.
.IP 73
Create file error.
.IP 74
I/O error.
.IP 78
Configuration file error.
.PD
.SH ENVIRONMENT
.TP
.B HOME
The user's home directory:
used to locate the default configuration file.
If unset,
the home directory is obtained from the password database entry
for the effective user.
If that fails,
no default configuration file is read.
.SH BUGS
PHP Markdown Extra allows multiple terms to share the same a definition;
however,
.B wrap
does not support this.
.SH FILES
.TP
.B ~/.wraprc
The default configuration file.
A configuration file,
even one explicitly specified via
.BR \-c ,
is neither actually checked for existence nor read
unless one of the
.BR \-a ,
.BR \-f ,
or
.B \-F
options
is specified
since it doesn't affect the result.
.SH EXAMPLE
Wrap text into paragraphs having a line width of 72 characters,
indenting one tab-stop,
and further indenting the start of each paragraph by 3 spaces:
.cS
wrap -m1 -I3
.cE 0
.SH AUTHOR
Paul J. Lucas
.RI < paul@lucasmail.org >
.SH SEE ALSO
.BR fmt (1),
.BR fold (1),
.BR par (1),
.BR wrapc (1),
.BR iscntrl (3),
.BR sysexits (3),
.BR wraprc (5)
.P
.nf
.IR "CommonMark" ", John MacFarlane,"
.br
<\f(CWhttp://commonmark.org/\fP>
.P
.IR "Internet Message Format" ", Peter W. Resnick,"
RFC 5322, October 2008.
.P
.IR "Markdown" ", John Gruber,"
.br
<\f(CWhttps://daringfireball.net/projects/markdown/\fP>
.P
.IR "PHP Markdown Extra" ,
.br
<\f(CWhttps://michelf.ca/projects/php-markdown/extra/\fP>
.P
.IR "PropList" ", Unicode Consortium,"
.br
<\f(CWhttp://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\fP>
.P
.IR "Uniform Resource Identifier (URI): Generic Syntax" ,
Tim Berners-Lee, et al, RFC 3986, January 2005.
.P
.IR "Writing on GitHub" ,
.br
<\f(CWhttps://help.github.com/categories/writing-on-github/\fP>
.P
.IR "UTF-8, a transformation format of ISO 10646" ", Francois Yergeau,"
RFC 3629, November 2003.
.\" vim:set et sw=2 ts=2:
