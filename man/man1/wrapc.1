.\"
.\"	wrapc -- comment reformatter
.\"	wrapc.1: manual page
.\"
.\"	Copyright (C) 1996-2013  Paul J. Lucas
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the Licence, or
.\"	(at your option) any later version.
.\" 
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\" 
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" ---------------------------------------------------------------------------
.\" define code-start macro
.de cS
.sp
.nf
.RS 5
.ft CW
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i
..
.\" define code-end macro
.de cE
.ft 1
.RE
.fi
.if !'\\$1'0' .sp
..
.\" ---------------------------------------------------------------------------
.TH \f3wrapc\f1 1 "November 2, 2013" "PJL TOOLS"
.SH NAME
wrapc \- comment reformatter
.SH SYNOPSIS
.B wrapc
.BI [ options ]
.SH DESCRIPTION
.B wrapc
is a filter for reformatting program comments by
wrapping and filling lines to a given
.IR line-length ,
the default for which is 80 characters.
This can be changed via the
.B \-l
option.
.P
Leading white-space and comment delimiters are preserved.
The characters that are recognized as comment delimeters are:
.IP "\f(CW!\f1" 10
HTML and XML comments.
.IP "\f(CW#\f1" 10
CMake, Make, Perl, Python, Ruby, and Shell comments.
.IP "\f(CW/\f1 and \f(CW*\f1" 10
C, C++, and Java comments.
.IP "\f(CW%\f1" 10
PostScript comments.
.IP "\f(CW:\f1" 10
XQuery comments.
.IP "\f(CW;\f1" 10
Assember and Lisp comments.
.IP "\f(CW>\f1" 10
Forwarded mail indicator.
.P
All other white-space characters are folded
in the same manner as in
.BR wrap .
.SH OPTIONS
An option argument
.I f
means
.IR file ,
.I n
means
.IR "unsigned integer" ,
and
.I s
means
.IR string .
.IP "\f3\-a\f2 s\f1"
Specifies the alias name
.I s
from the configuration file to be used.
This overrides any alias
from a matched pattern
via either the
.B \-f
or
.B \-F
options.
.IP "\f3\-c\f2 f\f1"
Specifies the configuration file
.I f
to read
(default is
.BR ~/.wraprc .)
.IP "\f3\-C\f1"
Suppresses reading of any configuration file,
even one explicitly specified via
.BR \-c .
.IP "\f3\-e\f1"
Treats white-space after an end-of-sentence character as a paragraph delimiter.
.IP "\f3\-f\f2 f\f1"
Reads from file
.I f
(default is standard input).
.IP "\f3\-F\f2 f\f1"
Sets the file-name to
.I f
as if it were being read from
but still reads from standard input.
(This allows the file-name to be matched against a pattern
in a configuration file to use an alias
while still allowing
.B wrapc
to be used as part of a shell pipeline.)
.IP "\f3\-l\f2 n\f1"
Sets
.I line-length
to
.I n
characters
(default is 80).
.IP "\f3\-o\f2 f\f1"
Writes to file
.I f
(default is standard output).
.IP "\f3\-p\f2 s\f1"
Treats the given characters in
.I s
as paragraph delimiters.
.IP "\f3\-s\f2 n\f1"
Sets
.I tab-spaces
(the number of spaces a tab character should be considered the same as)
to
.I n
characters
(default is 8).
.IP "\f3\-v\f1"
Prints the version number to
.I stderr
and exit.
.SH EXIT STATUS
The
.B wrapc
utility exits with 0 on success
and >0 on failure.
.SH EXAMPLE
While in
.BR vi ,
wrap the comment from the current line to the end of the paragraph:
.cS
!}wrapc -F'%'
.cE
The \f(CW%\f1 argument to the
.B \-F
option is expaned by
.B vi
to be the file's path name.
To lessen typing,
the above can be mapped to a key sequence in
.BR vi 's
\f(CW.exrc\f1
file:
.cS
map `c !}wrap -F'%'\f3^M\f1
.cE
.SH SEE ALSO
.BR vi (1),
.BR wrap (1)
.SH AUTHOR
Paul J. Lucas
.RI < paul@lucasmail.org >
