Wrap NEWS -- history of user-visible changes.

Copyright (C) 1996-2020 Paul J. Lucas.
See the end of the file for license conditions.

-------------------------------------------------------------------------------

* Changes in Wrap 5.6

** Forth support
Added support for Forth \ comments.


* Changes in Wrap 5.5.1

** Doxygen command maximum length
Now checking that the length of a prospective Doxygen command does not exceed
the maximum possible length.


* Changes in Wrap 5.5

** Added support for docbookinclude, maninclude, and xmlinclude
Added support for these for Doxygen 1.8.18.


* Changes in Wrap 5.4.1

Changed Doxygen's @note, @par, and @warning wrapping to go to the end of the
paragraph rather than the end of the line.


* Changes in Wrap 5.4

** Added support for Doxygen ordered lists
When reformatting Markdown with Doxygen comments, Doxygen ordered list items of
-# are recognized.


* Changes in Wrap 5.3.1

** Fixed additional blank comment line
If a comment ended in two consecutive newlines, an additional one was added
incorrectly.  This has been fixed.

** Fixed ordered list hang indent
Fixed hang-indent for ordered lists >= 10.


* Changes in Wrap 5.3

** Doxygen support
Doxygen-marked-up comments are now wrapped appropriately by wrapc via either
the doxygen or -x option.

** Block characters replaced by regular expression.
The --block-chars option has been replaced by the --block-regex option and its
argument is now treated as a regular expression.  (The short option is still
-b.)


* Changes in Wrap 5.2

** Added support for Simula comments
Wrapc can now automatically recognize and properly wrap Simula comments.


* Changes in Wrap 5.1

** End‐of‐line comment aligning improvement.
Now aligns only comments that are really at the end of the line (as opposed to
within a line).  It also does not align comments unless there is more than one
"token" on the line.


* Changes in Wrap 5.0

** End‐of‐line comment aligning.
Wrapc can now align end-of-line comments at a given column.

** Alias importing.
Aliases in configuration files can now import other aliases.

** More lenient alias names.
In addition to alphanumeric and the underscore character, alias names may now
also use any of the +-.: characters.


* Changes in Wrap 4.11

** Better handling of --comment-chars/-D value.
Wrapc now accepts only punctuation characters for the --comment-chars/-D value.
Duplicated characters may be given, but are ignored.  Whitespace is also
ignored.

** Wrap to terminal width.
Wrap and wrapc now accept one of "t", "term", or "terminal" as an argument to
either the --width or -w option to set the line width to the width of the
terminal in which either wrap or wrapc is running.


* Changes in Wrap 4.10

** Long command-line options.
Both wrap and wrapc now additionally accept long command-line options.


* Changes in Wrap 4.9

** No longer wrapping at hyphen characters within URIs.
An unintended consequence of adding wrapping at hyphen characters in 4.6 is
that URIs containing hyphens are also wrapped which isn't what is usually
wanted.  Wrap and wrapc no longer wrap at hyphen characters within file, FTP,
HTTP, or HTTPS URIs, or within e-mail addresses.


* Changes in Wrap 4.8

** Added ability to specify number of spaces after an end-of-sentence.
Wrap and wrapc now have a -E option that allows the number of spaces after an
end-of-sentence to be specified.


* Changes in Wrap 4.7

** Added better Unicode support.
Wrap now supports all Unicode question and exclamation marks, right quotation
parentheses, and brackets (for end-of-sentence characters) as well as space
characters.


* Changes in Wrap 4.6

** Added ability to wrap as hyphen characters.
Wrap and wrapc can now wrap at hyphen characters.


* Changes in Wrap 4.5

** Now handling HTML embedded in Markdown according to CommonMark.
Wrap and wrapc have changed Markdown support to be more inline with the
CommonMark specification <http://commonmark.org>, chielfly in the way in which
embeded HTML is handled.

** Now allowing ')' for Markdown ordered lists.
Wrap and wrapc now allow ')' as the delimiter for ordered lists.


* Changes in Wrap 4.4

** Added support for COBOL 2002 comments.
Wrapc can now automatically recognize and properly wrap COBOL comments.


* Changes in Wrap 4.3

** Added support for boxed comments.
Wrapc can now automatically recognize and properly wrap boxed comments.


* Changes in Wrap 4.2

** Added PHP Markdown Extra HTML abbreviation support.
Wrap and wrapc now support PHP Markdown Extra HTML abbreviations.

** Added PHP Markdown Extra definition list support.
Wrap and wrapc now support PHP Markdown Extra definition lists.

** Added PHP Markdown Extra footnote support.
Wrap and wrapc now support PHP Markdown Extra footnotes.


* Changes in Wrap 4.1

** Added PHP Markdown Extra table support.
Wrap and wrapc now support (pass through) PHP Markdown Extra tables.


* Changes in Wrap 4.0

** Added Markdown support.
Wrap and wrapc now have a -u option that enables wrapping of Markdown text.

** Added leading string option.
Wrap now has a -L option that allows a leading string to be prepended to every
line.


* Changes in Wrap 3.3

** Added whitespace prototype option.
Wrap now has a -P option that treats the leading whitespace on the first line
as a prototype for all subsequent lines.

** Added comment-delimiters option.
In wrapc, the comment delimiter characters can now be overridden via the new -D
command-line option.

** Added special-case handling of delimited block comments.
In wrapc, delimited block comments are now handled specially in that the first
and last lines are not altered.

** Added special-case handling of non-comment lines.
In wrapc, if the first line isn't a comment, then the leading whitespace alone
is used as a prototype for subsequent lines.

** Added block characters option.
In wrapc, blocks of text started by certain characters can now delimit
paragraphs via a new -b command-line option.  This allows things like Javadoc
or Doxygen @ characters, e.g., @param, to remain on their own lines.


* Changes in Wrap 3.2

** Improved leader handling.
In wrapc, the leader used to be defined as ^[{WS}{CC}]* (where WS are
whitespace characters and CC are comment characters) but this didn't work well
with comments like " // * Bullet"; hence the leader is now defined as
^{WS}*{CC}+{WS}*.

** Now using standard sysexits exit codes.
Exit codes are now those specified by sysexits(3).


* Changes in Wrap 3.1

** Fixed extraneous trailing whitespace.
Comment lines that contained only leading whitespace and the comment delimiter
no longer have trailing whitespace added.

** Stops wrapping text upon non-comment line.
If a line is encountered that does not start with whitespace followed by
comment delimiters, it signals the end of the comment and all remaining lines
are passed through verbatim.


* Changes in Wrap 3.0.3

** Now using C99.
Now using C99 as the minimum required C version.


* Changes in Wrap 3.0.2

** Changed wrapc algorithm.
Wrapc now strips leading characters anew for each line preventing the loss of
characters for subsequent lines that are indented less than the first.


* Changes in Wrap 3.0.1

** Fixed handling of long lines.
Lines longer than line-width are now handled correctly.

** Fixed handling of ragged lines in wrapc.
Comment lines that don't all start with the same number of delimiters are now
handled better.


* Changes in Wrap 3.0

** Added command-line option aliases.
Both wrap and wrapc now support aliases.  An alias is a user-defined,
short-hand name for command-line options that are frequently used together.

** Added configuration file.
Both wrap and wrapc now read a configuration file (if present) on startup that
defines aliases and patterns.

** Added end-of-sentence option.
Both wrap and wrapc now have a -e command-line option for specifying that
whitespace after an end-of-sentence character delimites a paragraph.

** Added file-matching patterns.
Both wrap and wrapc can now apply command-line options (via aliases) to files
automatically based on their names matching a pattern.

** Added input/output file options.
Both wrap and wrapc now have -f and -o command-line options for specifying the
input file to read from and the output file to write to, respectively.

** Added [nt]roff/man-page file support.
Wrap now has a -d command-line option that does not alter lines that begin with
a '.' (dot) presumed to be [nt]roff control lines.

** Added paragraph-delimiter option.
Both wrap and wrapc now have a -p command-line option that allows additional
characters to be specified as paragraph delimiters.

** Added tab-spaces option.
Both wrap and wrapc now have a -s command-line option for specifying the number
of spaces that a tab character should be considered the same as.

** Added title option.
Both wrap and wrapc now have a -T command-line option that treats the first
line of every paragraph as a title and puts it on a line by itself.

** Added UTF-8 support.
Wrap now correctly handles UTF-8 encoded text by always considering multi-byte
characters as having a width of 1.

** Changed "length" to "width".
With the addition of UTF-8 support, it sounds better to use "width" (as in
character and line width) rather than "length."  Consequently, the -l option
has been deprecated in favor of the new -w option.

** Fixed wrapc short-line bug.
A bug whereby reading a comment line that has fewer characters than the number
of leading characters of the first line resulted in lines being incorrectly
folded has been fixed.


* Changes in Wrap 1.0

** Initial version.

----------------------------------------------------------------------
The file is part of Wrap.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
